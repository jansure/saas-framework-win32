worker_processes  1;
error_log D:/openform-web/openresty-1.13.6.2-win32/logs/error.log info;

events {
    # use epoll;
    worker_connections 1024;
}

http {
	access_log D:/openform-web/openresty-1.13.6.2-win32/logs/access.log;

    # 指定默认的MIME type, 否则页面样式可能无法显示
    include D:/openform-web/openresty-1.13.6.2-win32/conf/mime.types;
    default_type application/octet-stream;

	lua_package_path "D:/openform-web/openresty-1.13.6.2-win32/lualib/?.lua;;";
	lua_package_cpath "D:/openform-web/openresty-1.13.6.2-win32/lualib/?.so;;";
	# utf-8编码
	charset utf-8;
    sendfile on;
    # 允许最大上传的文件大小
    client_max_body_size 4096m;
    # client_body_buffer_size 4096m;
    # 配置header变量能使用带下划线的变量
    underscores_in_headers on;
    ignore_invalid_headers off;
    # 将完整的请求主体存储在单个缓冲区
    client_body_in_single_buffer on;

    keepalive_timeout 24000;
    proxy_buffer_size 64k;
    proxy_buffers 4 128k;
    proxy_busy_buffers_size 256k;
    proxy_connect_timeout 600;
    proxy_send_timeout 1200;
    proxy_read_timeout 1200;

    # fileManager服务器地址
    upstream fileManager {
        server 127.0.0.1:8081;
    }
    #hide nginx version for security
    server_tokens off;

    server {
        listen 8080;
        # 默认不读取body
        lua_need_request_body off;
        # lua调试模式（即关闭lua脚本缓存)
        lua_code_cache off;

        # 使能平台，启动计算进程，参数传入所上传的vtk文件所在子目录名
        location = /VTK2GLTF {
            # 仅允许GET请求
            if ($request_method != GET) {
                # Method not allowed
                return 405;
            }
            content_by_lua_file D:/openform-web/openresty-1.13.6.2-win32/lua-script/VTK2GLTF.lua;
        }
        # 查询进程名是否存在
        location = /queryproc {
            # 仅允许GET请求
            if ($request_method != GET) {
                # Method not allowed
                return 405;
            }
            content_by_lua_file D:/openform-web/openresty-1.13.6.2-win32/lua-script/process_status.lua;
        }

        # 仅上传(可使用)
        location = /upload {
            # 仅允许内部调用
            # internal;
            # 仅允许PUT请求
            if ($request_method != PUT) {
                # Method not allowed
                return 405;
            }
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            if ($query_string ~ "dirid=(.*)") {
                set $dirid $1;
                rewrite  ^/upload /$dirid/?format=json? break;
                proxy_pass http://fileManager;
            }
        }
        # 上传目录zip（提供给外部，先自动创建目录，再上传文件，并创建result文件夹，最后返回子目录名称）
        location = /uploadfile {
            # 仅允许PUT请求
            if ($request_method != PUT) {
                # Method not allowed
                return 405;
            }
            content_by_lua_file D:/openform-web/openresty-1.13.6.2-win32/lua-script/upload_file.lua;

        }
        # 上传并解压(可使用)
        location = /uploadAndUnzip {
            # 仅允许内部调用
            # internal;
            # 仅允许PUT请求
            if ($request_method != PUT) {
                # Method not allowed
                return 405;
            }
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            rewrite ^/uploadAndUnzip / break;
            proxy_pass http://fileManager;
        }
        # 列出下载目录文件
        location = /listfile {
            # 仅允许GET请求
            if ($request_method != GET) {
                # Method not allowed
                return 405;
            }
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            if ($query_string ~ "dirid=(.*)") {
                set $dirid $1;
                rewrite  ^/listfile /$dirid/?format=json? break;
                proxy_pass http://fileManager;
            }
            #content_by_lua_file D:/openform-web/openresty-1.13.6.2-win32/lua-script/list_file.lua;
        }
        # 下载(指定子目录名称，下载子目录下的result文件夹，若result不存在会返回502错误)
        location = /downloadfile {
            # 仅允许GET请求
            if ($request_method != GET) {
                # Method not allowed
                return 405;
            }
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            if ($query_string ~ "dirid=(.*)") {
                set $dirid $1;
                rewrite  ^/downloadfile /$dirid/result/?format=zip? break;
                proxy_pass http://fileManager;
            }
        }
        # 下载目录zip
        location = /downloadzip {
            # 仅允许GET请求
            if ($request_method != GET) {
                # Method not allowed
                return 405;
            }
            add_header Content-Disposition "attachment;filename*=utf-8'zh_cn'$arg_n";
            content_by_lua_file D:/openform-web/openresty-1.13.6.2-win32/lua-script/download_zip.lua;

        }
        # 下载单个文件
        location = /downloadonefile {
            # 仅允许GET请求
            if ($request_method != GET) {
                # Method not allowed
                return 405;
            }
            content_by_lua_file D:/openform-web/openresty-1.13.6.2-win32/lua-script/download_one_file.lua;
        }
    }
}
